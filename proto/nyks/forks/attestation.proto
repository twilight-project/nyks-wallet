syntax = "proto3";
package twilightproject.nyks.forks;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";


option go_package = "github.com/twilight-project/nyks/x/forks/types";

// proposalType is the cosmos type of an event from the counterpart chain that can
// be handled

enum ProposalType {
  option (gogoproto.goproto_enum_prefix) = false;

  PROPOSAL_TYPE_BTC_CHAINTIP = 0;
  PROPOSAL_TYPE_BTC_DEPOSIT = 1;
  PROPOSAL_TYPE_SWEEP_PROPOSAL = 2;
  PROPOSAL_TYPE_CONFIRM_WITHDRAW = 3;
}

// Attestation is an aggregate of `proposals` that eventually becomes `observed` by
// all orchestrators
// OBSERVED:
// Observed indicates that >67% of validators have attested to the event,
// and that the event should be executed by the state machine
//
// The actual content of the proposals is passed in with the transaction making the proposal
// and then passed through the call stack alongside the attestation while it is processed
// the key in which the attestation is stored is keyed on the exact details of the proposal
// but there is no reason to store those exact details becuause the next message sender
// will kindly provide you with them.
message Attestation {
  bool                observed = 1;
  repeated string     votes    = 2;
  uint64              height   = 3;
  google.protobuf.Any proposal = 4;
}

message EventObservation {
    string attestation_type = 1;
    string attestation_id   = 2;
}